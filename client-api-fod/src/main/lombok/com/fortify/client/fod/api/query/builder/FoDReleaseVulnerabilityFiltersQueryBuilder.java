/*******************************************************************************
 * (c) Copyright 2020 Micro Focus or one of its affiliates, a Micro Focus company
 *
 * Permission is hereby granted, free of charge, to any person obtaining a 
 * copy of this software and associated documentation files (the 
 * "Software"), to deal in the Software without restriction, including without 
 * limitation the rights to use, copy, modify, merge, publish, distribute, 
 * sublicense, and/or sell copies of the Software, and to permit persons to 
 * whom the Software is furnished to do so, subject to the following 
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be included 
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY 
 * KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 ******************************************************************************/
package com.fortify.client.fod.api.query.builder;

import com.fortify.client.fod.api.query.FoDEntityQuery;
import com.fortify.client.fod.api.query.builder.AbstractFoDEntityQueryBuilder.IFoDEntityQueryBuilderParamFields;
import com.fortify.client.fod.api.query.builder.AbstractFoDEntityQueryBuilder.IFoDEntityQueryBuilderParamFilter;
import com.fortify.client.fod.connection.FoDAuthenticatingRestConnection;
import com.fortify.util.applier.ifblank.IfBlankAction;

/**
 * This class allows for building an {@link FoDEntityQuery} instance that allows for
 * querying FoD release vulnerability filters.
 * 
 * @author Ruud Senden
 *
 */
public class FoDReleaseVulnerabilityFiltersQueryBuilder extends AbstractFoDReleaseChildEntityQueryBuilder<FoDReleaseVulnerabilityFiltersQueryBuilder> 
	implements IFoDEntityQueryBuilderParamFields<FoDReleaseVulnerabilityFiltersQueryBuilder>, 
	           IFoDEntityQueryBuilderParamFilter<FoDReleaseVulnerabilityFiltersQueryBuilder>
{
	public FoDReleaseVulnerabilityFiltersQueryBuilder(FoDAuthenticatingRestConnection conn, String releaseId) {
		super(conn, releaseId, true);
		appendPath("vulnerability-filters");
	}
	
	@Override
	public FoDReleaseVulnerabilityFiltersQueryBuilder paramFields(IfBlankAction ifBlankAction, String... fields) {
		return super.paramFields(ifBlankAction, fields);
	}
	
	@Override
	public FoDReleaseVulnerabilityFiltersQueryBuilder paramFilterAnd(IfBlankAction ifBlankAction, String field, String... values) {
		return super.paramFilterAnd(ifBlankAction, field, values);
	}
	
	@Override
	public FoDReleaseVulnerabilityFiltersQueryBuilder paramFilterAnd(IfBlankAction ifBlankAction, String filter) {
		return super.paramFilterAnd(ifBlankAction, filter);
	}
	
	public FoDReleaseVulnerabilityFiltersQueryBuilder paramIncludeFixed(IfBlankAction ifBlankAction, Boolean includeFixed) {
		return super.queryParam(ifBlankAction, "includeFixed", Boolean.toString(includeFixed));
	}
	
	public FoDReleaseVulnerabilityFiltersQueryBuilder paramIncludeSuppressed(IfBlankAction ifBlankAction, Boolean includeSuppressed) {
		return super.queryParam(ifBlankAction, "includeSuppressed", Boolean.toString(includeSuppressed));
	}
	
	public FoDReleaseVulnerabilityFiltersQueryBuilder paramKeywordSearch(IfBlankAction ifBlankAction, String keywordSearch) {
		return super.queryParam(ifBlankAction, "keywordSearch", keywordSearch);
	}
	
	public FoDReleaseVulnerabilityFiltersQueryBuilder paramFieldName(IfBlankAction ifBlankAction, String fieldName) {
		return super.queryParam(ifBlankAction, "fieldName", fieldName);
	}
}
